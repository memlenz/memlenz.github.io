<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog Python on </title>
    <link>http://localhost:1313/blog/python/</link>
    <description>Recent content in Blog Python on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</managingEditor>
    <webMaster>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</webMaster>
    <copyright>&amp;copy; 2025 Ay√©doun Ch√¢-Fine ADEBI. All Rights Reserved.</copyright>
    <lastBuildDate>Sun, 16 Feb 2025 02:55:22 +0100</lastBuildDate><atom:link href="http://localhost:1313/blog/python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Organiser ses scripts Python proprement sur chaque OS</title>
      <link>http://localhost:1313/blog/python/organiser-ses-scripts/</link>
      <pubDate>Fri, 25 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/organiser-ses-scripts/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Pourquoi organiser ses scripts Python ? 
    &lt;div id=&#34;pourquoi-organiser-ses-scripts-python-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-organiser-ses-scripts-python-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on commence √† coder en Python, on a souvent tendance √† tout mettre en vrac sur le bureau ou dans &lt;code&gt;Documents/&lt;/code&gt;. Mauvaise id√©e. Une bonne organisation des fichiers et dossiers √©vite le chaos et facilite la gestion des projets.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Comprendre les chemins syst√®me sous Windows, Linux et macOS</title>
      <link>http://localhost:1313/blog/python/les-chemins/</link>
      <pubDate>Sun, 20 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/les-chemins/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;Introduction : Pourquoi les chemins syst√®me sont importants ?&lt;/strong&gt; 
    &lt;div id=&#34;introduction--pourquoi-les-chemins-syst√®me-sont-importants-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#introduction--pourquoi-les-chemins-syst%c3%a8me-sont-importants-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on installe Python et qu‚Äôon essaie de l‚Äôex√©cuter, on peut se retrouver face √† un message frustrant du genre :&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Python 2 vs Python 3 : Pourquoi c‚Äôest important ?</title>
      <link>http://localhost:1313/blog/python/python2-vs-python3/</link>
      <pubDate>Thu, 17 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/python2-vs-python3/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;Python 2 vs Python 3 : Un duel d√©pass√© ?&lt;/strong&gt; 
    &lt;div id=&#34;python-2-vs-python-3--un-duel-d√©pass√©-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#python-2-vs-python-3--un-duel-d%c3%a9pass%c3%a9-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Si tu d√©butes en Python, tu as peut-√™tre d√©j√† vu des r√©f√©rences √† &lt;strong&gt;Python 2&lt;/strong&gt; et &lt;strong&gt;Python 3&lt;/strong&gt;. Pourtant, la plupart des tutoriels d&amp;rsquo;aujourd&amp;rsquo;hui parlent uniquement de Python 3. Alors, c&amp;rsquo;est quoi cette histoire ? Pourquoi il y avait deux versions majeures ? Et surtout, &lt;strong&gt;est-ce que √ßa te concerne en 2025 ?&lt;/strong&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>üîí Cr√©er un Gestionnaire de Mots de Passe en CLI avec Python</title>
      <link>http://localhost:1313/blog/python/passwordmanager/</link>
      <pubDate>Sun, 13 Apr 2025 04:34:56 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/passwordmanager/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Cr√©er un Gestionnaire de Mots de Passe en CLI avec Python 
    &lt;div id=&#34;cr√©er-un-gestionnaire-de-mots-de-passe-en-cli-avec-python&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#cr%c3%a9er-un-gestionnaire-de-mots-de-passe-en-cli-avec-python&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Dans un monde o√π la s√©curit√© de nos informations personnelles est devenue incontournable, j&amp;rsquo;ai voulu r√©aliser un projet simple mais efficace : un gestionnaire de mots de passe en ligne de commande (CLI). Cet outil, d√©velopp√© en Python, permet de g√©n√©rer des mots de passe robustes, de les sauvegarder dans un fichier JSON et de les manipuler via une interface textuelle intuitive. Dans cet article, je vous montre comment quelques dizaines de lignes de code bien structur√©es peuvent mettre en ≈ìuvre des concepts avanc√©s en programmation et en s√©curit√©.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Installer Python sur Windows, Linux et Mac</title>
      <link>http://localhost:1313/blog/python/installation-python/</link>
      <pubDate>Thu, 10 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/installation-python/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Pourquoi installer Python ? 
    &lt;div id=&#34;pourquoi-installer-python-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-installer-python-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Avant de se lancer dans la programmation avec Python, il faut d&amp;rsquo;abord l&amp;rsquo;avoir sur sa machine. Contrairement √† certains langages qui viennent d√©j√† int√©gr√©s aux syst√®mes d‚Äôexploitation, Python doit √™tre install√© manuellement sur Windows, et parfois mis √† jour sur Linux et macOS.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>üéØ Impl√©mentation d&#39;un foramateur de texte en python</title>
      <link>http://localhost:1313/blog/python/bulletpointadder/</link>
      <pubDate>Wed, 09 Apr 2025 21:29:56 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/bulletpointadder/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Ma√Ætriser la Manipulation de Texte avec Python : Cr√©ation d&amp;rsquo;un Formateur de Liste √† Puces 
    &lt;div id=&#34;ma√Ætriser-la-manipulation-de-texte-avec-python--cr√©ation-dun-formateur-de-liste-√†-puces&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#ma%c3%aetriser-la-manipulation-de-texte-avec-python--cr%c3%a9ation-dun-formateur-de-liste-%c3%a0-puces&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Dans l&amp;rsquo;environnement de travail num√©rique d&amp;rsquo;aujourd&amp;rsquo;hui, formater du texte rapidement et efficacement peut faire gagner un temps pr√©cieux. En tant que d√©veloppeur Python, j&amp;rsquo;ai r√©cemment cr√©√© un outil utilitaire qui d√©montre comment quelques lignes de code Python peuvent simplifier les t√¢ches quotidiennes. Laissez-moi vous pr√©senter mon script de formatage de listes √† puces et mettre en √©vidence les comp√©tences Python qu&amp;rsquo;il illustre.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Pourquoi Python doit √™tre install√© pour fonctionner ?</title>
      <link>http://localhost:1313/blog/python/pourquoi-installer-python/</link>
      <pubDate>Sat, 05 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/pourquoi-installer-python/</guid>
      <description>&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pourquoi Python doit √™tre install√© pour fonctionner ?&lt;/strong&gt; 
    &lt;div id=&#34;pourquoi-python-doit-√™tre-install√©-pour-fonctionner-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-python-doit-%c3%aatre-install%c3%a9-pour-fonctionner-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;Quand tu t√©l√©charges un jeu, tu cliques sur un &lt;code&gt;.exe&lt;/code&gt; et √ßa marche direct. Mais si tu t√©l√©charges un script Python (&lt;code&gt;.py&lt;/code&gt;), double-cliquer dessus ne fonctionne pas toujours comme pr√©vu. Pourquoi ? Parce que Python &lt;strong&gt;n&amp;rsquo;est pas un logiciel comme les autres&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Comprendre les diff√©rentes options pour coder en Python et choisir l&#39;environnement qui convient le mieux.</title>
      <link>http://localhost:1313/blog/python/environnement-de-travail/</link>
      <pubDate>Sun, 30 Mar 2025 00:19:25 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/environnement-de-travail/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Choisir son environnement de travail 
    &lt;div id=&#34;choisir-son-environnement-de-travail&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#choisir-son-environnement-de-travail&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Avant d&amp;rsquo;√©crire une seule ligne de code en Python, il faut comprendre &lt;strong&gt;o√π et comment coder&lt;/strong&gt;. Tu as peut-√™tre entendu parler de &lt;strong&gt;VSCode&lt;/strong&gt;, &lt;strong&gt;PyCharm&lt;/strong&gt;, &lt;strong&gt;Jupyter Notebook&lt;/strong&gt; ou encore &lt;strong&gt;Vim&lt;/strong&gt;. Mais lequel choisir et pourquoi ?&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Diff√©rence entre l‚Äôinterpr√©teur Python (Shell interactif) et un fichier Python</title>
      <link>http://localhost:1313/blog/python/interpreteur-vs-fichier/</link>
      <pubDate>Sat, 29 Mar 2025 23:37:06 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/interpreteur-vs-fichier/</guid>
      <description>&lt;p&gt;Quand on commence avec Python, une des premi√®res confusions vient du fait qu‚Äôon peut taper des commandes dans un terminal et voir imm√©diatement un r√©sultat, mais aussi √©crire du code dans un fichier &lt;code&gt;.py&lt;/code&gt;. Pourquoi ces deux modes existent-ils ? Et surtout, quand utiliser l‚Äôun ou l‚Äôautre ?&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Diff√©rence entre un langage interpr√©t√© et un langage compil√©</title>
      <link>http://localhost:1313/blog/python/difference-interpr%C3%A9t%C3%A9-compil%C3%A9/</link>
      <pubDate>Sat, 29 Mar 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/difference-interpr%C3%A9t%C3%A9-compil%C3%A9/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;Langage interpr√©t√© vs langage compil√© : Quelle est la diff√©rence ?&lt;/strong&gt; 
    &lt;div id=&#34;langage-interpr√©t√©-vs-langage-compil√©--quelle-est-la-diff√©rence-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#langage-interpr%c3%a9t%c3%a9-vs-langage-compil%c3%a9--quelle-est-la-diff%c3%a9rence-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on commence √† apprendre la programmation, on entend souvent parler de &lt;strong&gt;langages interpr√©t√©s&lt;/strong&gt; et &lt;strong&gt;langages compil√©s&lt;/strong&gt;, mais la distinction entre les deux n&amp;rsquo;est pas toujours claire. Pourquoi doit-on &lt;strong&gt;compiler&lt;/strong&gt; un programme en C alors que Python fonctionne imm√©diatement apr√®s l‚Äôavoir √©crit ? Dans cet article, on va &lt;strong&gt;d√©construire cette diff√©rence&lt;/strong&gt; et voir comment elle impacte l‚Äôex√©cution des programmes.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>üñ•Ô∏è Diff√©rence entre un langage de programmation et un logiciel classique</title>
      <link>http://localhost:1313/blog/python/difference-logiciel-langage/</link>
      <pubDate>Sat, 29 Mar 2025 22:10:00 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/difference-logiciel-langage/</guid>
      <description>&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Diff√©rence entre un langage de programmation et un logiciel classique&lt;/strong&gt; 
    &lt;div id=&#34;diff√©rence-entre-un-langage-de-programmation-et-un-logiciel-classique&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#diff%c3%a9rence-entre-un-langage-de-programmation-et-un-logiciel-classique&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;Un d√©butant peut facilement confondre &lt;strong&gt;un langage de programmation&lt;/strong&gt; et &lt;strong&gt;un logiciel classique&lt;/strong&gt;, car dans les deux cas, il y a une installation et une interface √† utiliser. Pourtant, ce sont deux choses tr√®s diff√©rentes.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Diff√©rence entre un fichier .py et un ex√©cutable .exe</title>
      <link>http://localhost:1313/blog/python/difference-exe-py/</link>
      <pubDate>Sat, 29 Mar 2025 00:00:00 +0000</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/difference-exe-py/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;C&amp;rsquo;est quoi un fichier .py par rapport √† une application .exe ?&lt;/strong&gt; 
    &lt;div id=&#34;c&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#c&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on d√©bute en programmation, on peut penser qu‚Äôun fichier &lt;code&gt;.py&lt;/code&gt; (lorsque notre fichier contient du code python) est une application comme un &lt;code&gt;.exe&lt;/code&gt;. En r√©alit√©, ils sont tr√®s diff√©rents ! Voici une explication claire pour bien comprendre.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>üéØ Impl√©mentation du jeu Bagels en Python : Un d√©fi de d√©duction logique</title>
      <link>http://localhost:1313/blog/python/bagels/</link>
      <pubDate>Wed, 26 Mar 2025 21:29:56 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/bagels/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;üéÆ Bagels ‚Äì A Logic Game in Python 
    &lt;div id=&#34;-bagels--a-logic-game-in-python&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#-bagels--a-logic-game-in-python&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Hey everyone! Today, I‚Äôm sharing a fun little Python project: &lt;strong&gt;Bagels&lt;/strong&gt;, a deductive logic game. üß†üí°&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Pourquoi Python est un excellent premier langage ?</title>
      <link>http://localhost:1313/blog/python/pourquoi-python/</link>
      <pubDate>Sat, 15 Feb 2025 13:39:54 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/pourquoi-python/</guid>
      <description>&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pourquoi Python est un excellent premier langage ?&lt;/strong&gt; 
    &lt;div id=&#34;pourquoi-python-est-un-excellent-premier-langage-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-python-est-un-excellent-premier-langage-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;Je me souviens encore de mes premiers pas en programmation. J&amp;rsquo;avais ouvert un √©diteur de code, pr√™t √† √©crire mes premi√®res lignes&amp;hellip; et BAM ! Je suis tomb√© sur un bout de code en C plein d‚Äôaccolades, de points-virgules et de trucs incompr√©hensibles. J&amp;rsquo;ai essay√© de comprendre, mais j&amp;rsquo;avais l&amp;rsquo;impression de d√©chiffrer un langage alien.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
