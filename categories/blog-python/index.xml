<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog Python on </title>
    <link>http://localhost:1313/categories/blog-python/</link>
    <description>Recent content in Blog Python on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</managingEditor>
    <webMaster>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</webMaster>
    <copyright>&amp;copy; 2025 Ayédoun Châ-Fine ADEBI. All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 25 Apr 2025 23:09:59 +0100</lastBuildDate><atom:link href="http://localhost:1313/categories/blog-python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Organiser ses scripts Python proprement sur chaque OS</title>
      <link>http://localhost:1313/blog/python/organiser-ses-scripts/</link>
      <pubDate>Fri, 25 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/organiser-ses-scripts/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Pourquoi organiser ses scripts Python ? 
    &lt;div id=&#34;pourquoi-organiser-ses-scripts-python-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-organiser-ses-scripts-python-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on commence à coder en Python, on a souvent tendance à tout mettre en vrac sur le bureau ou dans &lt;code&gt;Documents/&lt;/code&gt;. Mauvaise idée. Une bonne organisation des fichiers et dossiers évite le chaos et facilite la gestion des projets.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Comprendre les chemins système sous Windows, Linux et macOS</title>
      <link>http://localhost:1313/blog/python/les-chemins/</link>
      <pubDate>Sun, 20 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/les-chemins/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;Introduction : Pourquoi les chemins système sont importants ?&lt;/strong&gt; 
    &lt;div id=&#34;introduction--pourquoi-les-chemins-système-sont-importants-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#introduction--pourquoi-les-chemins-syst%c3%a8me-sont-importants-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on installe Python et qu’on essaie de l’exécuter, on peut se retrouver face à un message frustrant du genre :&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Python 2 vs Python 3 : Pourquoi c’est important ?</title>
      <link>http://localhost:1313/blog/python/python2-vs-python3/</link>
      <pubDate>Thu, 17 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/python2-vs-python3/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;Python 2 vs Python 3 : Un duel dépassé ?&lt;/strong&gt; 
    &lt;div id=&#34;python-2-vs-python-3--un-duel-dépassé-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#python-2-vs-python-3--un-duel-d%c3%a9pass%c3%a9-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Si tu débutes en Python, tu as peut-être déjà vu des références à &lt;strong&gt;Python 2&lt;/strong&gt; et &lt;strong&gt;Python 3&lt;/strong&gt;. Pourtant, la plupart des tutoriels d&amp;rsquo;aujourd&amp;rsquo;hui parlent uniquement de Python 3. Alors, c&amp;rsquo;est quoi cette histoire ? Pourquoi il y avait deux versions majeures ? Et surtout, &lt;strong&gt;est-ce que ça te concerne en 2025 ?&lt;/strong&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Installer Python sur Windows, Linux et Mac</title>
      <link>http://localhost:1313/blog/python/installation-python/</link>
      <pubDate>Thu, 10 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/installation-python/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Pourquoi installer Python ? 
    &lt;div id=&#34;pourquoi-installer-python-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-installer-python-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Avant de se lancer dans la programmation avec Python, il faut d&amp;rsquo;abord l&amp;rsquo;avoir sur sa machine. Contrairement à certains langages qui viennent déjà intégrés aux systèmes d’exploitation, Python doit être installé manuellement sur Windows, et parfois mis à jour sur Linux et macOS.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Pourquoi Python doit être installé pour fonctionner ?</title>
      <link>http://localhost:1313/blog/python/pourquoi-installer-python/</link>
      <pubDate>Sat, 05 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/pourquoi-installer-python/</guid>
      <description>&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pourquoi Python doit être installé pour fonctionner ?&lt;/strong&gt; 
    &lt;div id=&#34;pourquoi-python-doit-être-installé-pour-fonctionner-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-python-doit-%c3%aatre-install%c3%a9-pour-fonctionner-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;Quand tu télécharges un jeu, tu cliques sur un &lt;code&gt;.exe&lt;/code&gt; et ça marche direct. Mais si tu télécharges un script Python (&lt;code&gt;.py&lt;/code&gt;), double-cliquer dessus ne fonctionne pas toujours comme prévu. Pourquoi ? Parce que Python &lt;strong&gt;n&amp;rsquo;est pas un logiciel comme les autres&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>De LazyVim à l&#39;exécution de son premier script Python</title>
      <link>http://localhost:1313/blog/linux-tweaks/lazyvim/</link>
      <pubDate>Sun, 30 Mar 2025 01:32:00 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/linux-tweaks/lazyvim/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;1. Installer Neovim et Git&lt;/strong&gt; 
    &lt;div id=&#34;1-installer-neovim-et-git&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#1-installer-neovim-et-git&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;LazyVim repose sur &lt;strong&gt;Neovim&lt;/strong&gt;, donc on l’installe :&lt;/p&gt;

&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pour Ubuntu/Debian :&lt;/strong&gt; 
    &lt;div id=&#34;pour-ubuntudebian-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pour-ubuntudebian-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt install -y neovim git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pour Arch Linux :&lt;/strong&gt; 
    &lt;div id=&#34;pour-arch-linux-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pour-arch-linux-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pacman -S neovim git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pour Void Linux :&lt;/strong&gt; 
    &lt;div id=&#34;pour-void-linux-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pour-void-linux-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo xbps-install -S neovim git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Vérifie l’installation :&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Comprendre les différentes options pour coder en Python et choisir l&#39;environnement qui convient le mieux.</title>
      <link>http://localhost:1313/blog/python/environnement-de-travail/</link>
      <pubDate>Sun, 30 Mar 2025 00:19:25 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/environnement-de-travail/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Choisir son environnement de travail 
    &lt;div id=&#34;choisir-son-environnement-de-travail&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#choisir-son-environnement-de-travail&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Avant d&amp;rsquo;écrire une seule ligne de code en Python, il faut comprendre &lt;strong&gt;où et comment coder&lt;/strong&gt;. Tu as peut-être entendu parler de &lt;strong&gt;VSCode&lt;/strong&gt;, &lt;strong&gt;PyCharm&lt;/strong&gt;, &lt;strong&gt;Jupyter Notebook&lt;/strong&gt; ou encore &lt;strong&gt;Vim&lt;/strong&gt;. Mais lequel choisir et pourquoi ?&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Différence entre l’interpréteur Python (Shell interactif) et un fichier Python</title>
      <link>http://localhost:1313/blog/python/interpreteur-vs-fichier/</link>
      <pubDate>Sat, 29 Mar 2025 23:37:06 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/interpreteur-vs-fichier/</guid>
      <description>&lt;p&gt;Quand on commence avec Python, une des premières confusions vient du fait qu’on peut taper des commandes dans un terminal et voir immédiatement un résultat, mais aussi écrire du code dans un fichier &lt;code&gt;.py&lt;/code&gt;. Pourquoi ces deux modes existent-ils ? Et surtout, quand utiliser l’un ou l’autre ?&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Différence entre un langage interprété et un langage compilé</title>
      <link>http://localhost:1313/blog/python/difference-interpr%C3%A9t%C3%A9-compil%C3%A9/</link>
      <pubDate>Sat, 29 Mar 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/difference-interpr%C3%A9t%C3%A9-compil%C3%A9/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;Langage interprété vs langage compilé : Quelle est la différence ?&lt;/strong&gt; 
    &lt;div id=&#34;langage-interprété-vs-langage-compilé--quelle-est-la-différence-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#langage-interpr%c3%a9t%c3%a9-vs-langage-compil%c3%a9--quelle-est-la-diff%c3%a9rence-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on commence à apprendre la programmation, on entend souvent parler de &lt;strong&gt;langages interprétés&lt;/strong&gt; et &lt;strong&gt;langages compilés&lt;/strong&gt;, mais la distinction entre les deux n&amp;rsquo;est pas toujours claire. Pourquoi doit-on &lt;strong&gt;compiler&lt;/strong&gt; un programme en C alors que Python fonctionne immédiatement après l’avoir écrit ? Dans cet article, on va &lt;strong&gt;déconstruire cette différence&lt;/strong&gt; et voir comment elle impacte l’exécution des programmes.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Blog Python</title>
      <link>http://localhost:1313/blog/python/</link>
      <pubDate>Sun, 16 Feb 2025 02:55:22 +0100</pubDate>
      <author>achafine@gmail.com (Châ-Fine Ayédoun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/</guid>
      <description>&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Qu&amp;rsquo;est-ce qu&amp;rsquo;un langage de programmation ? (Définition simple)&lt;/strong&gt; 
    &lt;div id=&#34;qu&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#qu&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;Un &lt;strong&gt;langage de programmation&lt;/strong&gt; est un &lt;strong&gt;moyen de communication&lt;/strong&gt; entre un humain et un ordinateur. Il permet de &lt;strong&gt;donner des instructions&lt;/strong&gt; à un ordinateur pour lui dire &lt;strong&gt;quoi faire&lt;/strong&gt; et &lt;strong&gt;comment le faire&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
