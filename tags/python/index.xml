<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on </title>
    <link>http://localhost:1313/tags/python/</link>
    <description>Recent content in Python on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <managingEditor>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</managingEditor>
    <webMaster>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</webMaster>
    <copyright>&amp;copy; 2025 Ay√©doun Ch√¢-Fine ADEBI. All Rights Reserved.</copyright>
    <lastBuildDate>Sun, 12 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pip vs Poetry : Le duel pour g√©rer vos d√©pendances Python</title>
      <link>http://localhost:1313/courses/python/pip-vs-poetry/</link>
      <pubDate>Sun, 12 Oct 2025 00:00:00 +0000</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/pip-vs-poetry/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Pip vs Poetry : Le duel pour g√©rer vos d√©pendances Python ‚öîÔ∏è 
    &lt;div id=&#34;pip-vs-poetry--le-duel-pour-g√©rer-vos-d√©pendances-python-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pip-vs-poetry--le-duel-pour-g%c3%a9rer-vos-d%c3%a9pendances-python-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Quand on d√©bute avec Python, on apprend rapidement √† utiliser &lt;code&gt;pip&lt;/code&gt; et &lt;code&gt;virtualenv&lt;/code&gt;.&lt;br&gt;
Mais un nouvel outil fait de plus en plus parler de lui : &lt;strong&gt;Poetry&lt;/strong&gt;.&lt;br&gt;
Dans cet article, on d√©cortique leurs diff√©rences, leurs avantages, et comment choisir pour vos projets Django ou Python modernes.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Organiser ses scripts Python proprement sur chaque OS</title>
      <link>http://localhost:1313/blog/python/organiser-ses-scripts/</link>
      <pubDate>Fri, 25 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/organiser-ses-scripts/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Pourquoi organiser ses scripts Python ? 
    &lt;div id=&#34;pourquoi-organiser-ses-scripts-python-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-organiser-ses-scripts-python-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on commence √† coder en Python, on a souvent tendance √† tout mettre en vrac sur le bureau ou dans &lt;code&gt;Documents/&lt;/code&gt;. Mauvaise id√©e. Une bonne organisation des fichiers et dossiers √©vite le chaos et facilite la gestion des projets.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Comprendre les chemins syst√®me sous Windows, Linux et macOS</title>
      <link>http://localhost:1313/blog/python/les-chemins/</link>
      <pubDate>Sun, 20 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/les-chemins/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;Introduction : Pourquoi les chemins syst√®me sont importants ?&lt;/strong&gt; 
    &lt;div id=&#34;introduction--pourquoi-les-chemins-syst√®me-sont-importants-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#introduction--pourquoi-les-chemins-syst%c3%a8me-sont-importants-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on installe Python et qu‚Äôon essaie de l‚Äôex√©cuter, on peut se retrouver face √† un message frustrant du genre :&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Python 2 vs Python 3 : Pourquoi c‚Äôest important ?</title>
      <link>http://localhost:1313/blog/python/python2-vs-python3/</link>
      <pubDate>Thu, 17 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/python2-vs-python3/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;Python 2 vs Python 3 : Un duel d√©pass√© ?&lt;/strong&gt; 
    &lt;div id=&#34;python-2-vs-python-3--un-duel-d√©pass√©-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#python-2-vs-python-3--un-duel-d%c3%a9pass%c3%a9-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Si tu d√©butes en Python, tu as peut-√™tre d√©j√† vu des r√©f√©rences √† &lt;strong&gt;Python 2&lt;/strong&gt; et &lt;strong&gt;Python 3&lt;/strong&gt;. Pourtant, la plupart des tutoriels d&amp;rsquo;aujourd&amp;rsquo;hui parlent uniquement de Python 3. Alors, c&amp;rsquo;est quoi cette histoire ? Pourquoi il y avait deux versions majeures ? Et surtout, &lt;strong&gt;est-ce que √ßa te concerne en 2025 ?&lt;/strong&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>üîí Cr√©er un Gestionnaire de Mots de Passe en CLI avec Python</title>
      <link>http://localhost:1313/blog/python/passwordmanager/</link>
      <pubDate>Sun, 13 Apr 2025 04:34:56 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/passwordmanager/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Cr√©er un Gestionnaire de Mots de Passe en CLI avec Python 
    &lt;div id=&#34;cr√©er-un-gestionnaire-de-mots-de-passe-en-cli-avec-python&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#cr%c3%a9er-un-gestionnaire-de-mots-de-passe-en-cli-avec-python&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Dans un monde o√π la s√©curit√© de nos informations personnelles est devenue incontournable, j&amp;rsquo;ai voulu r√©aliser un projet simple mais efficace : un gestionnaire de mots de passe en ligne de commande (CLI). Cet outil, d√©velopp√© en Python, permet de g√©n√©rer des mots de passe robustes, de les sauvegarder dans un fichier JSON et de les manipuler via une interface textuelle intuitive. Dans cet article, je vous montre comment quelques dizaines de lignes de code bien structur√©es peuvent mettre en ≈ìuvre des concepts avanc√©s en programmation et en s√©curit√©.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Installer Python sur Windows, Linux et Mac</title>
      <link>http://localhost:1313/blog/python/installation-python/</link>
      <pubDate>Thu, 10 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/installation-python/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Pourquoi installer Python ? 
    &lt;div id=&#34;pourquoi-installer-python-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-installer-python-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Avant de se lancer dans la programmation avec Python, il faut d&amp;rsquo;abord l&amp;rsquo;avoir sur sa machine. Contrairement √† certains langages qui viennent d√©j√† int√©gr√©s aux syst√®mes d‚Äôexploitation, Python doit √™tre install√© manuellement sur Windows, et parfois mis √† jour sur Linux et macOS.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>üéØ Impl√©mentation d&#39;un foramateur de texte en python</title>
      <link>http://localhost:1313/blog/python/bulletpointadder/</link>
      <pubDate>Wed, 09 Apr 2025 21:29:56 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/bulletpointadder/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Ma√Ætriser la Manipulation de Texte avec Python : Cr√©ation d&amp;rsquo;un Formateur de Liste √† Puces 
    &lt;div id=&#34;ma√Ætriser-la-manipulation-de-texte-avec-python--cr√©ation-dun-formateur-de-liste-√†-puces&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#ma%c3%aetriser-la-manipulation-de-texte-avec-python--cr%c3%a9ation-dun-formateur-de-liste-%c3%a0-puces&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Dans l&amp;rsquo;environnement de travail num√©rique d&amp;rsquo;aujourd&amp;rsquo;hui, formater du texte rapidement et efficacement peut faire gagner un temps pr√©cieux. En tant que d√©veloppeur Python, j&amp;rsquo;ai r√©cemment cr√©√© un outil utilitaire qui d√©montre comment quelques lignes de code Python peuvent simplifier les t√¢ches quotidiennes. Laissez-moi vous pr√©senter mon script de formatage de listes √† puces et mettre en √©vidence les comp√©tences Python qu&amp;rsquo;il illustre.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Pourquoi Python doit √™tre install√© pour fonctionner ?</title>
      <link>http://localhost:1313/blog/python/pourquoi-installer-python/</link>
      <pubDate>Sat, 05 Apr 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/pourquoi-installer-python/</guid>
      <description>&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pourquoi Python doit √™tre install√© pour fonctionner ?&lt;/strong&gt; 
    &lt;div id=&#34;pourquoi-python-doit-√™tre-install√©-pour-fonctionner-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-python-doit-%c3%aatre-install%c3%a9-pour-fonctionner-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;Quand tu t√©l√©charges un jeu, tu cliques sur un &lt;code&gt;.exe&lt;/code&gt; et √ßa marche direct. Mais si tu t√©l√©charges un script Python (&lt;code&gt;.py&lt;/code&gt;), double-cliquer dessus ne fonctionne pas toujours comme pr√©vu. Pourquoi ? Parce que Python &lt;strong&gt;n&amp;rsquo;est pas un logiciel comme les autres&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Comprendre et ma√Ætriser with et open en Python</title>
      <link>http://localhost:1313/courses/python/json-en-python/</link>
      <pubDate>Fri, 04 Apr 2025 10:55:18 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/json-en-python/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;&lt;strong&gt;Manipulation des fichiers JSON en Python : Ma√Ætrisez l&amp;rsquo;Art du Stockage de Donn√©es&lt;/strong&gt; 
    &lt;div id=&#34;manipulation-des-fichiers-json-en-python--ma√Ætrisez-l&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#manipulation-des-fichiers-json-en-python--ma%c3%aetrisez-l&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Les fichiers JSON, c‚Äôest &lt;strong&gt;le&lt;/strong&gt; format incontournable pour stocker et √©changer des donn√©es. Ultra flexible, il est utilis√© partout : API, configurations, logs, bases de donn√©es NoSQL‚Ä¶ Bref, &lt;strong&gt;vous allez bosser avec&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Comprendre et ma√Ætriser with et open en Python</title>
      <link>http://localhost:1313/courses/python/with-open/</link>
      <pubDate>Thu, 03 Apr 2025 10:55:18 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/with-open/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;&lt;strong&gt;&lt;code&gt;with open()&lt;/code&gt; en Python : G√©rer les fichiers comme un pro&lt;/strong&gt; 
    &lt;div id=&#34;with-open&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#with-open&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Quand on bosse avec des fichiers en Python, la m√©thode classique c‚Äôest d‚Äôouvrir le fichier, lire ou √©crire dedans, puis le refermer. Mais soyons honn√™tes, &lt;strong&gt;qui pense toujours √† fermer proprement son fichier ?&lt;/strong&gt; ü§®&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Comprendre et ma√Ætriser argparse en Python</title>
      <link>http://localhost:1313/courses/python/argparse-en-python/</link>
      <pubDate>Mon, 31 Mar 2025 10:55:18 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/argparse-en-python/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;üöÄ Ma√Ætriser argparse en Python : Guide complet 
    &lt;div id=&#34;-ma√Ætriser-argparse-en-python--guide-complet&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#-ma%c3%aetriser-argparse-en-python--guide-complet&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;üî• Pourquoi ce tuto ?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tu veux faire des scripts &lt;strong&gt;en ligne de commande&lt;/strong&gt; propres et puissants ?&lt;/li&gt;
&lt;li&gt;Marre de &lt;code&gt;sys.argv&lt;/code&gt; et du parsing manuel des arguments ?&lt;/li&gt;
&lt;li&gt;Tu veux &lt;strong&gt;des options, des flags, de l&amp;rsquo;aide automatique, et m√™me des sous-commandes&lt;/strong&gt; ?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;h2 class=&#34;relative group&#34;&gt;üìå Pourquoi &lt;code&gt;argparse&lt;/code&gt; et pas &lt;code&gt;sys.argv&lt;/code&gt; ? 
    &lt;div id=&#34;-pourquoi-argparse-et-pas-sysargv-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#-pourquoi-argparse-et-pas-sysargv-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;üî• &lt;em&gt;Comment un script Python r√©cup√®re-t-il des arguments en ligne de commande ?&lt;/em&gt;&lt;br&gt;
Si tu fais juste :&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>De LazyVim √† l&#39;ex√©cution de son premier script Python</title>
      <link>http://localhost:1313/blog/linux-tweaks/lazyvim/</link>
      <pubDate>Sun, 30 Mar 2025 01:32:00 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/linux-tweaks/lazyvim/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;1. Installer Neovim et Git&lt;/strong&gt; 
    &lt;div id=&#34;1-installer-neovim-et-git&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#1-installer-neovim-et-git&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;LazyVim repose sur &lt;strong&gt;Neovim&lt;/strong&gt;, donc on l‚Äôinstalle :&lt;/p&gt;

&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pour Ubuntu/Debian :&lt;/strong&gt; 
    &lt;div id=&#34;pour-ubuntudebian-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pour-ubuntudebian-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt update &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt install -y neovim git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pour Arch Linux :&lt;/strong&gt; 
    &lt;div id=&#34;pour-arch-linux-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pour-arch-linux-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pacman -S neovim git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pour Void Linux :&lt;/strong&gt; 
    &lt;div id=&#34;pour-void-linux-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pour-void-linux-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo xbps-install -S neovim git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;V√©rifie l‚Äôinstallation :&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Comprendre les diff√©rentes options pour coder en Python et choisir l&#39;environnement qui convient le mieux.</title>
      <link>http://localhost:1313/blog/python/environnement-de-travail/</link>
      <pubDate>Sun, 30 Mar 2025 00:19:25 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/environnement-de-travail/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Choisir son environnement de travail 
    &lt;div id=&#34;choisir-son-environnement-de-travail&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#choisir-son-environnement-de-travail&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Avant d&amp;rsquo;√©crire une seule ligne de code en Python, il faut comprendre &lt;strong&gt;o√π et comment coder&lt;/strong&gt;. Tu as peut-√™tre entendu parler de &lt;strong&gt;VSCode&lt;/strong&gt;, &lt;strong&gt;PyCharm&lt;/strong&gt;, &lt;strong&gt;Jupyter Notebook&lt;/strong&gt; ou encore &lt;strong&gt;Vim&lt;/strong&gt;. Mais lequel choisir et pourquoi ?&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Diff√©rence entre l‚Äôinterpr√©teur Python (Shell interactif) et un fichier Python</title>
      <link>http://localhost:1313/blog/python/interpreteur-vs-fichier/</link>
      <pubDate>Sat, 29 Mar 2025 23:37:06 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/interpreteur-vs-fichier/</guid>
      <description>&lt;p&gt;Quand on commence avec Python, une des premi√®res confusions vient du fait qu‚Äôon peut taper des commandes dans un terminal et voir imm√©diatement un r√©sultat, mais aussi √©crire du code dans un fichier &lt;code&gt;.py&lt;/code&gt;. Pourquoi ces deux modes existent-ils ? Et surtout, quand utiliser l‚Äôun ou l‚Äôautre ?&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Diff√©rence entre un langage interpr√©t√© et un langage compil√©</title>
      <link>http://localhost:1313/blog/python/difference-interpr%C3%A9t%C3%A9-compil%C3%A9/</link>
      <pubDate>Sat, 29 Mar 2025 23:09:59 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/difference-interpr%C3%A9t%C3%A9-compil%C3%A9/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;Langage interpr√©t√© vs langage compil√© : Quelle est la diff√©rence ?&lt;/strong&gt; 
    &lt;div id=&#34;langage-interpr√©t√©-vs-langage-compil√©--quelle-est-la-diff√©rence-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#langage-interpr%c3%a9t%c3%a9-vs-langage-compil%c3%a9--quelle-est-la-diff%c3%a9rence-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on commence √† apprendre la programmation, on entend souvent parler de &lt;strong&gt;langages interpr√©t√©s&lt;/strong&gt; et &lt;strong&gt;langages compil√©s&lt;/strong&gt;, mais la distinction entre les deux n&amp;rsquo;est pas toujours claire. Pourquoi doit-on &lt;strong&gt;compiler&lt;/strong&gt; un programme en C alors que Python fonctionne imm√©diatement apr√®s l‚Äôavoir √©crit ? Dans cet article, on va &lt;strong&gt;d√©construire cette diff√©rence&lt;/strong&gt; et voir comment elle impacte l‚Äôex√©cution des programmes.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Diff√©rence entre un fichier .py et un ex√©cutable .exe</title>
      <link>http://localhost:1313/blog/python/difference-exe-py/</link>
      <pubDate>Sat, 29 Mar 2025 00:00:00 +0000</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/difference-exe-py/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;&lt;strong&gt;C&amp;rsquo;est quoi un fichier .py par rapport √† une application .exe ?&lt;/strong&gt; 
    &lt;div id=&#34;c&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#c&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;Quand on d√©bute en programmation, on peut penser qu‚Äôun fichier &lt;code&gt;.py&lt;/code&gt; (lorsque notre fichier contient du code python) est une application comme un &lt;code&gt;.exe&lt;/code&gt;. En r√©alit√©, ils sont tr√®s diff√©rents ! Voici une explication claire pour bien comprendre.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>üéØ Impl√©mentation du jeu Bagels en Python : Un d√©fi de d√©duction logique</title>
      <link>http://localhost:1313/blog/python/bagels/</link>
      <pubDate>Wed, 26 Mar 2025 21:29:56 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/bagels/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;üéÆ Bagels ‚Äì A Logic Game in Python 
    &lt;div id=&#34;-bagels--a-logic-game-in-python&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#-bagels--a-logic-game-in-python&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Hey everyone! Today, I‚Äôm sharing a fun little Python project: &lt;strong&gt;Bagels&lt;/strong&gt;, a deductive logic game. üß†üí°&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les exceptions en Python</title>
      <link>http://localhost:1313/courses/python/try-except/</link>
      <pubDate>Tue, 04 Mar 2025 02:08:27 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/try-except/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;&lt;strong&gt;Les Blocs Try/Except en Python : G√©rez Vos Erreurs comme un Pro !&lt;/strong&gt; 
    &lt;div id=&#34;les-blocs-tryexcept-en-python--g√©rez-vos-erreurs-comme-un-pro-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#les-blocs-tryexcept-en-python--g%c3%a9rez-vos-erreurs-comme-un-pro-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;En programmation, les erreurs, c&amp;rsquo;est in√©vitable. Que vous lisiez un fichier, manipuliez des donn√©es ou interagissiez avec une API, des exceptions peuvent survenir √† tout moment. Heureusement, Python vous offre une solution √©l√©gante pour anticiper et g√©rer ces impr√©vus : les blocs &lt;strong&gt;try/except&lt;/strong&gt;. Dans cet article, on va d√©cortiquer cette fonctionnalit√© incontournable pour que vos programmes deviennent robustes et fiables.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Le gestionnaire de packet PIP</title>
      <link>http://localhost:1313/courses/python/pip/</link>
      <pubDate>Tue, 04 Mar 2025 02:03:48 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/pip/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;&lt;strong&gt;PIP en Python : G√©rez vos Packages comme un Pro&lt;/strong&gt; 
    &lt;div id=&#34;pip-en-python--g√©rez-vos-packages-comme-un-pro&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pip-en-python--g%c3%a9rez-vos-packages-comme-un-pro&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Si vous codez en Python, vous avez forc√©ment crois√© &lt;strong&gt;PIP&lt;/strong&gt;. Ce petit outil, c‚Äôest votre passeport pour un √©cosyst√®me riche de biblioth√®ques et de modules. Besoin d‚Äôajouter du machine learning, de la manipulation de donn√©es ou m√™me du web scraping √† votre projet ? &lt;strong&gt;PIP&lt;/strong&gt; est l√† pour installer tout ce qu‚Äôil faut, rapidement et proprement.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Module RegEx</title>
      <link>http://localhost:1313/courses/python/module-regex/</link>
      <pubDate>Tue, 04 Mar 2025 01:42:00 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/module-regex/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;&lt;strong&gt;Les RegEx en Python : Domptez la Puissance des Expressions R√©guli√®res&lt;/strong&gt; 
    &lt;div id=&#34;les-regex-en-python--domptez-la-puissance-des-expressions-r√©guli√®res&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#les-regex-en-python--domptez-la-puissance-des-expressions-r%c3%a9guli%c3%a8res&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Les expressions r√©guli√®res, ou &lt;em&gt;RegEx&lt;/em&gt;, c&amp;rsquo;est l&amp;rsquo;outil ultime pour manipuler du texte en mode ninja. En Python, le module &lt;code&gt;re&lt;/code&gt; vous permet de rechercher, de filtrer, de valider ou de transformer des cha√Ænes de caract√®res avec une efficacit√© redoutable. Dans cet article, on va plonger dans l&amp;rsquo;univers des RegEx, d√©couvrir leurs bases et voir comment les utiliser pour rendre vos scripts Python encore plus puissants. üöÄ&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Module JSON</title>
      <link>http://localhost:1313/courses/python/module-json/</link>
      <pubDate>Tue, 04 Mar 2025 01:37:05 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/module-json/</guid>
      <description>&lt;p&gt;JSON (&lt;em&gt;JavaScript Object Notation&lt;/em&gt;) est un format ultra-populaire pour √©changer des donn√©es. L√©ger, lisible et facile √† parser, il est utilis√© partout : API, bases de donn√©es, fichiers de configuration&amp;hellip; Bref, si vous codez en Python, vous allez souvent bosser avec du JSON.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Module Math</title>
      <link>http://localhost:1313/courses/python/module-math/</link>
      <pubDate>Tue, 04 Mar 2025 01:32:43 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/module-math/</guid>
      <description>&lt;p&gt;En programmation, il est fr√©quent de devoir manipuler des nombres, calculer des racines carr√©es, arrondir des valeurs ou encore travailler avec des constantes math√©matiques comme œÄ (pi). C&amp;rsquo;est l√† qu&amp;rsquo;intervient le module &lt;code&gt;math&lt;/code&gt; de Python, une bo√Æte √† outils ultra pratique pour g√©rer les calculs num√©riques sans se casser la t√™te.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les Dates en Python</title>
      <link>http://localhost:1313/courses/python/dates/</link>
      <pubDate>Tue, 04 Mar 2025 01:27:53 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/dates/</guid>
      <description>&lt;p&gt;La gestion des dates et des heures est une facette incontournable de la programmation, et Python met √† votre disposition des outils puissants pour travailler avec ces donn√©es temporelles. Dans cet article, nous allons explorer les bases de la manipulation des dates en Python, en mettant l&amp;rsquo;accent sur le module int√©gr√© &lt;code&gt;datetime&lt;/code&gt;, ainsi que quelques astuces pratiques pour formater, comparer et transformer vos dates.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les Modules en Python</title>
      <link>http://localhost:1313/courses/python/modules/</link>
      <pubDate>Tue, 04 Mar 2025 01:19:13 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/modules/</guid>
      <description>&lt;p&gt;Python est bien plus qu‚Äôun simple langage de programmation : c‚Äôest un √©cosyst√®me o√π chaque fichier de code peut devenir une brique de votre projet. Pour tous ceux qui veulent √©crire un code clair, r√©utilisable et modulable, les modules Python sont vos meilleurs alli√©s. Dans cet article, nous allons explorer ce concept essentiel et d√©couvrir comment les modules transforment notre mani√®re de programmer.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>La portee en Python</title>
      <link>http://localhost:1313/courses/python/portee/</link>
      <pubDate>Mon, 03 Mar 2025 05:57:31 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/portee/</guid>
      <description>&lt;p&gt;Si t‚Äôas d√©j√† eu un bug chelou o√π une variable semble dispara√Ætre ou changer toute seule, bienvenue dans le monde de la &lt;strong&gt;port√©e&lt;/strong&gt; (scope) en Python. C‚Äôest un concept simple mais fondamental : il d√©finit o√π une variable est accessible dans ton code. Et si tu veux √©viter des surprises, mieux vaut le ma√Ætriser.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Polymorphisme</title>
      <link>http://localhost:1313/courses/python/polymorphisme/</link>
      <pubDate>Mon, 03 Mar 2025 05:53:56 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/polymorphisme/</guid>
      <description>&lt;p&gt;T‚Äôas d√©j√† entendu parler du polymorphisme en Python, mais √ßa te semble encore flou ? Imagine un ninja qui change de technique en fonction de son adversaire : le polymorphisme, c‚Äôest un peu √ßa en programmation. Il permet d‚Äôutiliser une m√™me interface pour diff√©rents types d‚Äôobjets, rendant ton code plus flexible et r√©utilisable.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>L&#39; Heritage en Python</title>
      <link>http://localhost:1313/courses/python/heritage/</link>
      <pubDate>Mon, 03 Mar 2025 05:50:46 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/heritage/</guid>
      <description>&lt;p&gt;Si tu veux devenir un tueur en Python, comprendre l‚Äôh√©ritage est un passage oblig√©. Que ce soit pour organiser ton code proprement, r√©utiliser des fonctionnalit√©s ou construire des syst√®mes modulaires, l‚Äôh√©ritage est un outil puissant. Mais mal utilis√©, il peut aussi transformer ton code en une usine √† gaz difficile √† maintenir.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les Classes en Python</title>
      <link>http://localhost:1313/courses/python/classes/</link>
      <pubDate>Mon, 03 Mar 2025 05:46:06 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/classes/</guid>
      <description>&lt;p&gt;Si t‚Äôas d√©j√† crois√© des mots comme &lt;em&gt;POO&lt;/em&gt;, &lt;em&gt;classes&lt;/em&gt;, &lt;em&gt;objets&lt;/em&gt; et que √ßa t‚Äôa donn√© envie de fuir‚Ä¶ t‚Äôinqui√®te, on va rendre √ßa simple et digeste. La programmation orient√©e objet (&lt;em&gt;POO&lt;/em&gt; pour les intimes) est une mani√®re d‚Äôorganiser ton code pour qu‚Äôil soit plus r√©utilisable, propre et logique.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les array en Python</title>
      <link>http://localhost:1313/courses/python/array/</link>
      <pubDate>Mon, 03 Mar 2025 05:40:20 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/array/</guid>
      <description>&lt;p&gt;Les &lt;strong&gt;arrays&lt;/strong&gt; en Python, c‚Äôest un peu le truc que tout le monde confond avec les listes. Pourtant, ce sont deux structures bien diff√©rentes, et si tu veux vraiment coder efficacement, autant comprendre quand utiliser l‚Äôun ou l‚Äôautre.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les fonctions lambda en Python</title>
      <link>http://localhost:1313/courses/python/lambda/</link>
      <pubDate>Thu, 27 Feb 2025 19:57:54 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/lambda/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Les Fonctions Lambda en Python : Des Fonctions Ultra-Compactes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Si tu es d√©j√† familiaris√© avec les fonctions classiques en Python, tu sais qu&amp;rsquo;elles peuvent parfois √™tre un peu longues √† √©crire pour des t√¢ches simples. C‚Äôest l√† que &lt;strong&gt;les fonctions lambda&lt;/strong&gt; entrent en sc√®ne pour te simplifier la vie. Elles te permettent de cr√©er des fonctions anonymes, en une seule ligne, super efficaces et parfaites pour les cas o√π tu n‚Äôas pas besoin de nommer ta fonction.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les fonction en python</title>
      <link>http://localhost:1313/courses/python/fonction/</link>
      <pubDate>Thu, 27 Feb 2025 19:54:14 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/fonction/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Les Fonctions en Python : La Cl√© de l&amp;rsquo;Efficacit√©&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tu veux rendre ton code plus propre, plus modulaire, et surtout r√©utilisable sans avoir √† tout r√©√©crire √† chaque fois ? Les &lt;strong&gt;fonctions&lt;/strong&gt; sont l√† pour √ßa. Elles te permettent de regrouper un ensemble d&amp;rsquo;instructions sous un seul nom, que tu peux ensuite appeler √† tout moment dans ton code, en y passant des param√®tres, et en r√©cup√©rant des r√©sultats.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les boucles en Python</title>
      <link>http://localhost:1313/courses/python/boucles/</link>
      <pubDate>Thu, 27 Feb 2025 19:47:35 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/boucles/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Les Structures de Boucles en Python : Reprends le Contr√¥le de ton Code&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Quand tu veux que ton programme r√©p√®te une s√©rie d‚Äôactions plusieurs fois sans avoir √† tout coder √† la main, les boucles sont ton meilleur ami. En Python, elles sont simples √† comprendre et te permettent de faire des actions r√©p√©titives de mani√®re efficace et √©l√©gante.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les structures conditionnelles avec Python</title>
      <link>http://localhost:1313/courses/python/conditions/</link>
      <pubDate>Thu, 27 Feb 2025 19:39:29 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/conditions/</guid>
      <description>&lt;p&gt;Si la programmation √©tait une histoire, les structures conditionnelles seraient les moments o√π l&amp;rsquo;intrigue prend un tournant. Tu sais, ces points o√π ton programme doit choisir quel chemin emprunter. &lt;strong&gt;Les structures conditionnelles&lt;/strong&gt; te permettent de dire √† ton code : &amp;ldquo;Si cette condition est vraie, fais √ßa, sinon fais autre chose.&amp;rdquo; C‚Äôest un peu comme dans la vraie vie, o√π tu choisis une action en fonction de ce qui se passe autour de toi.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les dictionnaires en Python</title>
      <link>http://localhost:1313/courses/python/dictionnaires/</link>
      <pubDate>Thu, 27 Feb 2025 19:30:48 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/dictionnaires/</guid>
      <description>&lt;p&gt;Tu veux stocker des donn√©es sous forme de paires cl√©-valeur, comme une sorte de carnet o√π chaque information est associ√©e √† un identifiant unique ? Les &lt;strong&gt;dictionnaires&lt;/strong&gt; en Python sont faits pour toi. Imagine un annuaire t√©l√©phonique o√π chaque nom est li√© √† un num√©ro, ou une base de donn√©es o√π chaque identifiant est li√© √† des informations sp√©cifiques. C‚Äôest exactement ce que fait un dictionnaire, mais en bien plus flexible et puissant.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les sets en Python</title>
      <link>http://localhost:1313/courses/python/sets/</link>
      <pubDate>Thu, 27 Feb 2025 19:27:26 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/sets/</guid>
      <description>&lt;p&gt;Tu cherches √† stocker des √©l√©ments sans te prendre la t√™te avec des doublons ? Les &lt;strong&gt;sets&lt;/strong&gt; en Python sont l√† pour √ßa. Ces collections sont super utiles lorsque tu veux garantir que chaque √©l√©ment dans ta collection soit unique. En plus, ils offrent une vitesse de recherche et de suppression ultra rapide. Bref, si tu veux de la simplicit√© et de l&amp;rsquo;efficacit√©, les sets devraient rapidement devenir tes alli√©s dans ton code Python.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les tuples en Python</title>
      <link>http://localhost:1313/courses/python/tuples/</link>
      <pubDate>Thu, 27 Feb 2025 18:50:12 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/tuples/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Les Tuples en Python : Les Collections Inalt√©rables&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tu cherches une structure de donn√©es rapide, simple et &lt;strong&gt;inalt√©rable&lt;/strong&gt; pour stocker des informations ? Le &lt;strong&gt;tuple&lt;/strong&gt; en Python est ce qu&amp;rsquo;il te faut ! Un peu comme une liste, mais en version solide. Une fois cr√©√©, tu ne peux pas le modifier ‚Äî ce qui le rend encore plus fiable quand tu as besoin d&amp;rsquo;une collection dont tu es s√ªr qu&amp;rsquo;elle ne changera jamais.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les list en Python</title>
      <link>http://localhost:1313/courses/python/list/</link>
      <pubDate>Thu, 27 Feb 2025 18:47:13 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/list/</guid>
      <description>&lt;p&gt;Tu veux stocker plusieurs valeurs dans une seule variable sans te prendre la t√™te avec des d√©clarations interminables ? Les listes en Python sont la solution id√©ale. C&amp;rsquo;est un peu comme un panier o√π tu peux jeter tous tes √©l√©ments ‚Äî des nombres, des cha√Ænes de caract√®res, ou m√™me d&amp;rsquo;autres listes ‚Äî et les r√©cup√©rer √† tout moment pour les manipuler.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les operateurs en Python</title>
      <link>http://localhost:1313/courses/python/operateurs/</link>
      <pubDate>Thu, 27 Feb 2025 18:44:01 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/operateurs/</guid>
      <description>&lt;p&gt;En Python, les op√©rateurs sont des outils essentiels. Ils sont la base pour effectuer des calculs, manipuler des donn√©es et prendre des d√©cisions dans ton code. Qu&amp;rsquo;il s&amp;rsquo;agisse d&amp;rsquo;additionner des nombres, de comparer des valeurs, ou de combiner des expressions logiques, tu vas constamment utiliser des op√©rateurs. Mais attention, ils ne sont pas tous les m√™mes ! Python te donne tout un arsenal d‚Äôop√©rateurs pour accomplir diff√©rents types d&amp;rsquo;actions, et comprendre comment ils fonctionnent est indispensable pour bien programmer.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les booleen en Python</title>
      <link>http://localhost:1313/courses/python/booleen/</link>
      <pubDate>Thu, 27 Feb 2025 18:38:35 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/booleen/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Les Bool√©ens en Python : La V√©rit√© est Toute Simple&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Les bool√©ens, c‚Äôest un peu comme la lumi√®re au bout du tunnel dans le monde de la programmation. Ils ne sont pas nombreux, mais ils sont cruciaux. En Python, tu vas souvent tomber sur ces petites valeurs qui, au fond, ne peuvent √™tre que &lt;strong&gt;Vrai (True)&lt;/strong&gt; ou &lt;strong&gt;Faux (False)&lt;/strong&gt;. Et pourtant, ils sont derri√®re des d√©cisions importantes dans ton code. C‚Äôest gr√¢ce √† eux qu&amp;rsquo;on peut contr√¥ler le flux du programme, tester des conditions, et prendre des d√©cisions strat√©giques dans le code.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les Strings en Python</title>
      <link>http://localhost:1313/courses/python/strings/</link>
      <pubDate>Thu, 27 Feb 2025 17:50:25 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/strings/</guid>
      <description>&lt;p&gt;Les strings, ou cha√Ænes de caract√®res, sont l&amp;rsquo;un des types de donn√©es les plus utilis√©s en Python. Que ce soit pour manipuler des donn√©es d&amp;rsquo;entr√©e utilisateur, traiter des fichiers texte ou encore g√©n√©rer du contenu dynamique, les cha√Ænes de caract√®res sont partout. Mais comment les utiliser efficacement et tirer le meilleur parti de leurs fonctionnalit√©s ? C‚Äôest ce qu&amp;rsquo;on va explorer ici, avec un petit d√©tour par les bonnes pratiques.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Le casting en Python</title>
      <link>http://localhost:1313/courses/python/casting/</link>
      <pubDate>Thu, 27 Feb 2025 14:34:02 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/casting/</guid>
      <description>&lt;p&gt;Le casting, ou la conversion de types, en Python, c‚Äôest comme jouer au magicien des donn√©es. T&amp;rsquo;as des types diff√©rents dans tes variables, et parfois, tu veux les transformer pour qu&amp;rsquo;ils collent mieux √† tes besoins. Pas de souci, Python te permet de faire tout √ßa de mani√®re ultra simple. Et comme c‚Äôest un langage qui aime la flexibilit√©, le casting devient une des comp√©tences de base pour rendre ton code encore plus fluide et efficace.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les nombres en Python</title>
      <link>http://localhost:1313/courses/python/nombres/</link>
      <pubDate>Thu, 27 Feb 2025 12:30:01 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/nombres/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Les Nombres en Python : De l&amp;rsquo;Int√©grale √† la D√©cimale&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Les nombres sont, sans surprise, l&amp;rsquo;une des pierres angulaires de la programmation. Et en Python, c&amp;rsquo;est un terrain de jeu assez large que tu vas d√©couvrir. Que tu manipules des entiers pour compter des objets ou des flottants pour des calculs de pr√©cision, Python te fournit tout un arsenal pour travailler avec des chiffres de mani√®re fluide et intuitive. Dans cet article, on plonge dans les diff√©rentes facettes des nombres en Python, avec des exemples concrets et quelques astuces qui te faciliteront la vie.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Les type de donn√©e en python</title>
      <link>http://localhost:1313/courses/python/type-donnee/</link>
      <pubDate>Thu, 27 Feb 2025 10:22:53 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/type-donnee/</guid>
      <description>&lt;p&gt;Quand tu d√©butes en Python, l&amp;rsquo;un des concepts essentiels √† comprendre, c&amp;rsquo;est celui des types de donn√©es. Chaque valeur que tu manipules en Python appartient √† un type sp√©cifique. Ces types d√©terminent non seulement ce que tu peux faire avec les donn√©es, mais aussi la mani√®re dont elles sont stock√©es et manipul√©es en m√©moire. Dans cet article, on va explorer les types de donn√©es les plus utilis√©s en Python, en d√©cryptant leur fonctionnement et leurs applications avec des exemples concrets.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Syntaxe du langage Python</title>
      <link>http://localhost:1313/courses/python/syntaxe/</link>
      <pubDate>Wed, 26 Feb 2025 02:29:44 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/syntaxe/</guid>
      <description>&lt;p&gt;Lorsque tu te lances dans la programmation Python, l&amp;rsquo;une des premi√®res choses que tu remarqueras, c‚Äôest √† quel point la syntaxe du langage est simple et √©pur√©e. C‚Äôest un peu comme une respiration dans un oc√©an de langages parfois trop verbeux. Dans cet article, on va d√©cortiquer ensemble les bases de la syntaxe Python, en te donnant des cl√©s pour √©crire du code propre, lisible, et qui roule sans accroc.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Variables et commentaires en python</title>
      <link>http://localhost:1313/courses/python/variables/</link>
      <pubDate>Wed, 26 Feb 2025 02:26:44 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/variables/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Les Variables en Python : Le c≈ìur de ton code 
    &lt;div id=&#34;les-variables-en-python--le-c≈ìur-de-ton-code&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#les-variables-en-python--le-c%c5%93ur-de-ton-code&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Les variables sont comme des bo√Ætes magiques qui servent √† stocker et manipuler des donn√©es dans ton programme. En Python, elles sont particuli√®rement souples et intuitives !&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Introduction √† Python</title>
      <link>http://localhost:1313/courses/python/introduction/</link>
      <pubDate>Tue, 25 Feb 2025 01:59:02 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/courses/python/introduction/</guid>
      <description>&lt;h1 class=&#34;relative group&#34;&gt;Python : Introduction et premiers pas 
    &lt;div id=&#34;python--introduction-et-premiers-pas&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#python--introduction-et-premiers-pas&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h1&gt;
&lt;p&gt;Python est un &lt;strong&gt;langage de programmation de haut niveau&lt;/strong&gt; qui se distingue par sa &lt;strong&gt;simplicit√©&lt;/strong&gt; et sa &lt;strong&gt;lisibilit√©&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Pourquoi Python est un excellent premier langage ?</title>
      <link>http://localhost:1313/blog/python/pourquoi-python/</link>
      <pubDate>Sat, 15 Feb 2025 13:39:54 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/python/pourquoi-python/</guid>
      <description>&lt;h3 class=&#34;relative group&#34;&gt;&lt;strong&gt;Pourquoi Python est un excellent premier langage ?&lt;/strong&gt; 
    &lt;div id=&#34;pourquoi-python-est-un-excellent-premier-langage-&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#pourquoi-python-est-un-excellent-premier-langage-&#34; aria-label=&#34;Ancre&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;Je me souviens encore de mes premiers pas en programmation. J&amp;rsquo;avais ouvert un √©diteur de code, pr√™t √† √©crire mes premi√®res lignes&amp;hellip; et BAM ! Je suis tomb√© sur un bout de code en C plein d‚Äôaccolades, de points-virgules et de trucs incompr√©hensibles. J&amp;rsquo;ai essay√© de comprendre, mais j&amp;rsquo;avais l&amp;rsquo;impression de d√©chiffrer un langage alien.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Langage</title>
      <link>http://localhost:1313/blog/</link>
      <pubDate>Sat, 15 Feb 2025 13:39:39 +0100</pubDate>
      <author>achafine@gmail.com (Ch√¢-Fine Ay√©doun ADEBI)</author>
      <guid>http://localhost:1313/blog/</guid>
      <description>&lt;p&gt;Dans ce coin du blog, nous allons plonger dans l&amp;rsquo;univers fascinant des
langages de programmation et de l&amp;rsquo;informatique en g√©n√©ral.
D√©couvrez les derni√®res tendances, les meilleures pratiques et les
secrets des langages tels que :
Python, Java, JavaScript et bien d&amp;rsquo;autres.
Que vous soyez d√©butant ou expert, cette section est faite pour vous aider √† am√©liorer
vos comp√©tences en programmation et √† rester √† jour avec les derni√®res
√©volutions du monde de la technologie.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
